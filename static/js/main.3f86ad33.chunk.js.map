{"version":3,"sources":["Components/context.js","Components/Todo/TodoItem.jsx","Components/Todo/TodoList.jsx","Components/Todo/AddTodo.jsx","App.js","index.js"],"names":["Context","React","createContext","TodoItem","todo","index","onChange","removeTodo","useContext","classes","completed","push","className","join","checked","type","id","title","onClick","styles","ul","listStyle","margin","padding","TodoList","props","style","todos","map","key","onToggle","AddTodo","onCreate","useState","value","setValue","marginBottom","onSubmit","e","preventDefault","trim","event","target","App","setTodos","Provider","filter","concat","Date","now","length","ReactDOM","render","document","getElementById"],"mappings":"8NAIeA,EAFCC,IAAMC,gBC+CPC,MA3Bf,YAA4C,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,SACvBC,EAAcC,qBAAWR,GAAzBO,WACDE,EAAU,GAMhB,OAJML,EAAKM,WACPD,EAAQE,KAAK,QAIf,4BACE,0BAAMC,UAAWH,EAAQI,KAAK,MAC5B,2BAAOC,QAASV,EAAKM,UAAWK,KAAK,WAAWT,SAAU,kBAAMA,EAASF,EAAKY,OAC9E,gCAASX,EAAQ,GAFnB,OAIGD,EAAKa,OAER,4BAAQC,QAAS,kBAAMX,EAAWH,EAAKY,KAAKJ,UAAU,MAAtD,UChCAO,EAAS,CACbC,GAAI,CACFC,UAAW,OACXC,OAAQ,EACRC,QAAS,IAyBEC,MArBf,SAAkBC,GAChB,OACE,wBAAIC,MAAOP,EAAOC,IACdK,EAAME,MAAMC,KAAI,SAACxB,EAAMC,GACvB,OACE,kBAAC,EAAD,CACEwB,IAAKzB,EAAKY,GACVZ,KAAMA,EACNC,MAAOA,EACPC,SAAUmB,EAAMK,gBCKbC,MAxBf,YAA8B,IAAZC,EAAW,EAAXA,SAAW,EACDC,mBAAS,IADR,mBACpBC,EADoB,KACbC,EADa,KAY3B,OACE,0BAAMT,MAAO,CAACU,aAAc,QAASC,SAVvC,SAAuBC,GACrBA,EAAEC,iBAEEL,EAAMM,SACRR,EAASE,GACTC,EAAS,OAMT,2BAAOD,MAAOA,EAAO5B,SAAU,SAAAmC,GAAK,OAAIN,EAASM,EAAMC,OAAOR,UAC9D,4BAAQnB,KAAK,UAAb,sD,MC6BS4B,MAtCf,WAAe,IAAD,EACc1C,IAAMgC,SAAS,IAD7B,mBACLN,EADK,KACEiB,EADF,KA0BZ,OACE,kBAAC,EAAQC,SAAT,CAAkBX,MAAO,CAAC3B,WAb5B,SAAoBS,GAClB4B,EAASjB,EAAMmB,QAAO,SAAA1C,GAAI,OAAIA,EAAKY,KAAOA,SAaxC,yBAAKJ,UAAU,WACb,oEAEA,kBAAC,EAAD,CAASoB,SAbf,SAAiBf,GACf2B,EAASjB,EAAMoB,OAAO,CAAC,CACrB9B,QACAD,GAAIgC,KAAKC,MACTvC,WAAW,SAWRiB,EAAMuB,OAAS,kBAAC,EAAD,CAAUvB,MAAOA,EAAOG,SA9B9C,SAAoBd,GAClB4B,EACEjB,EAAMC,KAAI,SAAAxB,GAIR,OAHIA,EAAKY,KAAOA,IACdZ,EAAKM,WAAaN,EAAKM,WAElBN,SAwB4D,8HCtC3E+C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.3f86ad33.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Context = React.createContext();\r\n\r\nexport default Context;","import React, {useContext} from 'react';\r\n\r\nimport Context from '../context.js';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n// const styles = {\r\n//   li: {\r\n//     display: 'flex',\r\n//     justifyContent: 'space-between',\r\n//     alignItems: 'center',\r\n//     padding: '.5rem 1rem',\r\n//     border: '1px solid #ccc',\r\n//     borderRadius: 4,\r\n//     marginBottom: '.5rem'\r\n//   },\r\n//   input: {\r\n//     marginRight: '1rem'\r\n//   }\r\n// }\r\n\r\nfunction TodoItem({todo, index, onChange}) {\r\n  const {removeTodo} = useContext(Context);\r\n  const classes = [];\r\n\r\n    if (todo.completed) {\r\n      classes.push('done');\r\n    }\r\n\r\n  return (\r\n    <li>\r\n      <span className={classes.join(' ')}>\r\n        <input checked={todo.completed} type=\"checkbox\" onChange={() => onChange(todo.id)} />\r\n        <strong>{index + 1}</strong>\r\n        &nbsp;\r\n        {todo.title}\r\n      </span>\r\n      <button onClick={() => removeTodo(todo.id)} className=\"rm\">&times;</button>\r\n    </li>\r\n  )\r\n};\r\n\r\nTodoItem.propTypes = {\r\n  todo: PropTypes.object.isRequired,\r\n  index: PropTypes.number,\r\n  onChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoItem;","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TodoItem from './TodoItem.jsx';\r\n\r\nconst styles = {\r\n  ul: {\r\n    listStyle: 'none',\r\n    margin: 0,\r\n    padding: 0\r\n  }\r\n}\r\n\r\nfunction TodoList(props) {\r\n  return (\r\n    <ul style={styles.ul}>\r\n      { props.todos.map((todo, index) => {\r\n        return ( \r\n          <TodoItem \r\n            key={todo.id} \r\n            todo={todo} \r\n            index={index} \r\n            onChange={props.onToggle} />\r\n        )\r\n      }) }\r\n    </ul>\r\n  )\r\n}\r\n\r\nTodoList.propTypes = {\r\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onToggle: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoList;","import React, {useState} from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction AddTodo({onCreate}) {\r\n  const [value, setValue] = useState('');\r\n\r\n  function submitHandler(e) {\r\n    e.preventDefault();\r\n\r\n    if (value.trim()) {\r\n      onCreate(value);\r\n      setValue('');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form style={{marginBottom: '1rem'}} onSubmit={submitHandler}>\r\n      <input value={value} onChange={event => setValue(event.target.value)} />\r\n      <button type=\"submit\">Добавить</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nAddTodo.propTypes = {\r\n  onCreate: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddTodo;","import React from 'react';\n\nimport TodoList from './Components/Todo/TodoList.jsx';\nimport AddTodo from './Components/Todo/AddTodo.jsx';\nimport Context from './Components/context.js';\n\nimport './App.css';\n\n\n\nfunction App(){\n  const [todos, setTodos] = React.useState([]);\n\n  function toggleTodo(id) {\n    setTodos(\n      todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    )\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter(todo => todo.id !== id));\n  }\n\n  function addTodo(title) {\n    setTodos(todos.concat([{\n      title,\n      id: Date.now(),\n      completed: false\n    }]));\n  }\n\n  return (\n    <Context.Provider value={{removeTodo}}>\n      <div className=\"wrapper\">\n        <h1>Список</h1>\n\n        <AddTodo onCreate={addTodo} />\n\n        {todos.length ? <TodoList todos={todos} onToggle={toggleTodo} /> : <p>Ничего не найдено</p>}\n      </div>\n    </Context.Provider>\n  )\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}